import os
import json
import datetime
import boto3
import urllib.request
import logging
import math
from datetime import timedelta

logger = logging.getLogger()
logger.setLevel(logging.INFO)
region = os.environ['AWS_REGION']
webhook_url = os.environ['webhook_url']
headers = {"Content-Type" : "application/json"}

def get_ce(client,startdate,enddate,key):
    return client.get_cost_and_usage(
      TimePeriod = {'Start': startdate, 'End': enddate}, 
      Granularity = 'MONTHLY',
      Metrics = ['BlendedCost','UsageQuantity'],
      GroupBy = [{ 'Type': 'DIMENSION', 'Key': key }]
    )

def write_teams(text):
    json_data = json.dumps(text).encode("utf-8")
    request = urllib.request.Request(webhook_url, data=json_data, method="post", headers=headers)
    with urllib.request.urlopen(request) as response:
        response_body = response.read().decode("utf-8")

def lambda_handler(event,context):
    client = boto3.client('ce')
    now = datetime.datetime.now()
    tomorrow = now + timedelta(days=1)
    startdate = now.strftime('%Y-%m-01')
    enddate   = tomorrow.strftime('%Y-%m-%d')
    cost = ''

    costinfo = get_ce(client,startdate,enddate,'SERVICE')
    logger.info(costinfo)
    totalcost = 0
    for val in costinfo['ResultsByTime'][0]['Groups']:
        amount = val['Metrics']['BlendedCost']['Amount']
        cost = cost + '- {}: {} USD\n\n'.format(val['Keys'][0],amount)
        totalcost = totalcost + float(amount)
    if totalcost == 0:
        cost = "none"
    else:
        cost = cost + 'Region: \n\n'
        costinfo = get_ce(client,startdate,enddate,'REGION')
        for val in costinfo['ResultsByTime'][0]['Groups']:
            amount = val['Metrics']['BlendedCost']['Amount']
            if not math.isclose(float(amount), 0.0):
                cost = cost + '- {}: {} USD\n\n'.format(val['Keys'][0],amount)
    title = 'コスト状況報告({}~{}): Total= {} USD'.format(startdate,enddate,totalcost)
    text = {"title": title, "text": cost}
    write_teams(text)
    
    retdata = {
  	    "startdate"   	: startdate,
  	    "enddate"   	: enddate,
        "cost"          : cost
    }
    return retdata
